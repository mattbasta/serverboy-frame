#summary Documentation for Frame features
#labels Featured,Phase-Deploy,Phase-Implementation

<wiki:toc max_depth="4" />

= Getting Started =

To get started using Frame, there are only a two steps.

== Step 1: Get Frame ==

There are three ways that you can get a copy of Frame. The first is to get it from the Google [http://code.google.com/p/serverboy-frame/downloads/list download page]. These are frozen copies of Frame that you can even hotlink against.

The second way is to download a custom build from [http://frame.serverboy.net/build the homepage]. This allows you to include only the features that you want.

The last way is to hotlink against the latest build. This way can result in problems, however, as changes to the build will be reflected on your site. Feature additions and removals can cause your site to break. You can do this by linking your stylesheet to http://frame.serverboy.net/latest/

== Step 2: Including Frame ==

Include a `<link />` tag in your page's `<head>` tag:

{{{
<head>
<title>My page's title</title>
<link type="text/css" rel="stylesheet" href="/path/to/frame.css" />
</head>
}}}

If you are hotlinking, you can use this code:

{{{
<head>
<title>My page's title</title>
<link type="text/css" rel="stylesheet" href="http://frame.serverboy.net/latest/" />
</head>
}}}

Remember, hotlinking will ensure that your site looks its best in all browsers, but it may also break your layout.

== Optional Step 3: HTML5 Support ==

If you intend to use the features of HTML5 in your site, then you will need to enable these in Internet Explorer. To do this, include the following code in your head tag:

{{{
<!--[if IE]>
<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
<![endif]--> 
}}}

This will enable you to use HTML5 tags in IE.

= Using Frame =

== Configuration ==

All configuration for Frame should be placed in a class on the `<body>` tag as so:

{{{
<body class="configuration parameters here">
}}}

== Layout ==

When designing your page, all elements should be placed in a default container. A default container is a container that encapsulates your content and provides a starting point for the rest of your layout.

{{{

<!-- Standard -->
<div id="container"> ... </div>

<!-- Paper -->
<article id="paper"> ... </article>

}}}

Note that the use of `<article>` or `<div>` is not mandatory, but it is recommended.

The layout features of Frame will not apply to elements that are outside of your default container.

=== Container Positioning ===

By default, the default container is centered on the page. To align it to the left of the screen, the following configuration parameter is available:

||left||Aligns the default container to the left of the page.||

=== Clearing ===

After every set of columns in a layout, you must "clear" the layout by placing a clearing `div` after the column set.

{{{

<div id="container">
    <section class="g6"> ... </section>
    <section class="g6"> ... </section>
    <div class="clear"></div>
</div>

}}}

The clearing div in the above example allows for more columns to be placed below the two `<section>` elements. Elements will align against the clearing `<div>` and not against the bottom of the `<section>` elements.

There are two types of clearing elements available. The first is the standard clearing `<div>` as shown above. The second is a "cleargap" `<div>`, which introduces a `1em` gap between the sets of columns.

{{{

<div id="container">
    <div class="clear"></div> <!-- Clearing Div -->
    <div class="cleargap"></div> <!-- Cleargap Div -->
</div>

}}}

By default, `<hr />` tags and headers (`h1`-`h6` and `hgroup`) will automatically clear, as well.

=== Grid ===

The container can be divided up according to a 12-unit-wide grid. Columns in the grid may be from one to eleven units wide.

The following code creates a column consuming 6 units, one consuming 3 units, one consuming 2 units, and one consuming 1 unit.

{{{

<div id="container">
    <section class="g6"> ... </section>
    <section class="g3"> ... </section>
    <div class="g2"> ... </div>
    <nav class="g1"> ... </nav>
    <div class="clear"></div>
</div>

}}}

Note that the elements used to create the grid are inconsequential.

==== Sub-Grids ====

When placing grid elements inside another grid element, you must place the `gfirst` and `glast` classes on the first and last columns (respectively). This preserves the gutters between the columns:

{{{

<div id="container">
    <section class="g6">
        <div class="g2 gfirst"> ... </div>
        <div class="g2"> ... </div>
        <div class="g2 glast"> ... </div>
        <div class="clear"></div>
    </section>
    <section class="g3"> ... </section>
    <div class="g2"> ... </div>
    <nav class="g1"> ... </nav>
    <div class="clear"></div>
</div>

}}}

==== Gutter Width ====

By default, there is a `20px` "gutter" between each column and a `10px` gutter along the edges of the default container. There are two other options available, which can be set in the configuration of the page (using the `<body>` class):

||gg10g||Reduces the gutter by half (10px between columns and 5px along the container)||
||gg0g||Eliminates the gutter altogether||

==== Shoving ====

A column is also able to "shove" proceeding columns to the right (effectively increasing the right-hand gutter of the column).

{{{

<div id="container">
    <section class="g4 s4"> ... </section>
    <nav class="g4"> ... </nav>
    <div class="clear"></div>
</div>

}}}

The above example fills the whole default container with two four unit columns. The first column shoves the second column right by four units.

=== Percent Grid ===

A simple implementation for grid percentages is also in place. Identical to the usage of the grid layout (`g1-11`, `gfirst`, and `glast`), this layout technique uses the following classes:

||`gquarter`||Represents one quarter of the width of the page. Equivalent to `g3` in the default container.||
||`gthird`||Represents one quarter of the width of the page. Equivalent to `g4` in the default container.||
||`ghalf`||Represents one half of the width of the page. Equivalent to `g6` in the default container.||

These are especially useful in scenarios where the default container is not the usual width or for inside other columns (whose widths are not known).

Grid columns should not be used inside percent columns.

There is no shoving allowed on percent columns. There are no multiple-unit percent columns (i.e.: two thirds, three quarters, etc.).

==== Percent Gutters ====

By default, the gutter width for percent-based columns is 5% between columns and 2.5% along the edges of the default container.

The following configuration parameters are available to control gutter width on percent-based columns:

||gg25pg||A 2.5% gutter between columns and a 1.25% gutter along the edge of the default container||
||gg0g||No gutter _Note that this is the same parameter for grid columns_||

== Typography ==

The following configuration parameters are available for a page. These properties affect the entire page.

||sm||Uses a small font size||
||med||Uses a medium font size _Default_||
||lg||Uses a large font size||
||xl||Uses a very large font size||

||serif/cambria||Loads a default OS-friendly serif font||
||times/times-new-roman||Loads a serif font||
||georgia||Loads Georgia||
||sans-serif||Loads a default OS-friendly sans-serif font (Arial/Helvetica)||
||verdana||Loads Verdana||
||monospace||Loads an OS-friendly monospace font||

=== Headers ===

Header tags will automatically be sized logarithmically, though other configurations are available:

||Tag||_default_||quarter-headers||third-headers||half-headers||
||h1||2.8em||2.25em||2.66em||3.5em||
||h2||2.11em||2em||2.33em||3em||
||h3||1.7em||1.75em||2em||2.5em||
||h4||1.41em||1.5em||1.66em||2em||
||h5||1.19em||1.25em||1.33em||1.5em||
||h6||1em||1em||1em||1em||

All headers are bold by default.

=== Text-Level Elements ===

All text is double-spaced by default. To single-space elements, use the following configuration parameter:

||single-spaced||Converts all text to single-spaced||

`<blcokquote>`, `<code>`, and `<pre>` are single-spaced by default.

=== Lists ===

==== Definition Lists ====

Definition lists are (by default) entirely unstyled aside from their line height and margining. Adding the following classes to the `<dl>` element will change the way definition list is presented. Classes may be mixed and matched.

||indent||The `dd` tag is indented by `0.5in`||
||bold||The `dt` tag is made bold||

==== Ordered Lists ====

Ordered lists use numbering by default. Adding the following classes to the `<ol>` tag will change the way the ordered list is presented. Classes should not be mixed and matched.

||loweralpha||Uses lowercase letters for the list||
||upperalpha||Uses capital letters for the list||

== Code ==

When displaying code, it is often useful to highlight the syntax. Frame has built in support for syntax highlighting. To enable syntax highlighting, add the following configuration parameter to the body class:

||use-code||Enables syntax highlighting||

Code tags within a `<p>` tag will not be affected by this. Once enabled, syntax highlighting can be disabled on any individual `<code>` tag by placing the following class on it:

||non-executing||Disables syntax highlighting on a `<code>` tag||

To use syntax highlighting, the following classes should be placed on `<span>` tags inside the `<code>` tag (such that the `<span>` tags properly delineate the context of the code). The alternate tag can also be used in place of a `<span>` with a class.

||Class||Represents||Description||Alternate||
||cs||Code Structure||Represents a structure of the code (i.e.: a reserved word; for, while, etc.)||`<tt>`||
||cm||Comment||Represents commented code||
||v||Variable||Represents a variable||`<var>`||
||l||Literal||Represents a literal value||`<kbd>`||
||n||Numeric Literal||Represents a numeric value||
